// Generated by CoffeeScript 1.6.3
(function() {
  var deuces, game;

  deuces = require("../deuces2");

  describe("The module", function() {
    return it("is not null", function() {
      return expect(deuces).not.toBe(null);
    });
  });

  game = new deuces.Game();

  describe("The Deck", function() {
    it("is not null", function() {
      return expect(typeof game.deck).not.toBe('undefined');
    });
    return it("has 52 cards", function() {
      return expect(game.deck.cards.length).toBe(52);
    });
  });

  describe("The Player", function() {
    return it("is not null", function() {
      return expect(deuces.Player != null).toBe(true);
    });
  });

  describe("The Game", function() {
    game = new deuces.Game();
    it("is not null", function() {
      return expect(deuces.Game != null).toBe(true);
    });
    it("has a deck", function() {
      return expect(game.deck != null).toBe(true);
    });
    it("has players", function() {
      return expect(game.players != null).toBe(true);
    });
    it("can add players", function() {
      var player;
      player = new deuces.Player();
      game.addPlayer(player);
      return expect(game.players.length).toBe(1);
    });
    it("should not add more than 4 players", function() {
      var player2, player3, player4, player5;
      player2 = new deuces.Player();
      player3 = new deuces.Player();
      player4 = new deuces.Player();
      game.addPlayer(player2);
      game.addPlayer(player3);
      game.addPlayer(player4);
      expect(game.players.length).toBe(4);
      player5 = new deuces.Player();
      game.addPlayer(player5);
      return expect(game.players.length).toBe(4);
    });
    return it("should not add something that's not a player", function() {
      game = new deuces.Game();
      game.addPlayer(1);
      return expect(game.players.length).toBe(0);
    });
  });

}).call(this);
