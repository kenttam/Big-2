// Generated by CoffeeScript 1.6.3
(function() {
  var Card, Deck, Game, Player, RulesEngine, _;

  _ = require("./lib/underscore-min");

  Card = require("./card");

  Deck = require("./deck");

  Player = require("./player");

  RulesEngine = require("./rulesEngine");

  Game = (function() {
    function Game() {
      this.deck = new Deck();
      this.players = [];
      this.rulesEngine = new RulesEngine();
      this.playersPassed = 0;
      this.cardsInCenter = [];
    }

    Game.prototype.addPlayer = function(player) {
      if (player instanceof Player && this.players.length < 4) {
        this.players.push(player);
        return player.game = this;
      }
    };

    Game.prototype.start = function() {
      if (this.players.length === 4) {
        this.deck.shuffle();
        this.passOutCards();
        return this.whoseTurn = this.findPlayerIndexWithDiamondThree();
      }
    };

    Game.prototype.passOutCards = function() {
      this.players[0].hand = this.deck.cards.slice(0, 13);
      this.players[1].hand = this.deck.cards.slice(13, 26);
      this.players[2].hand = this.deck.cards.slice(26, 39);
      return this.players[3].hand = this.deck.cards.slice(39, 52);
    };

    Game.prototype.findPlayerIndexWithDiamondThree = function() {
      var diamondThree, playerNumber;
      diamondThree = new Card(3, "Diamond");
      playerNumber = null;
      _.each(this.players, function(player, currentPlayerNumber) {
        return _.each(player.hand, function(card) {
          if (_.isEqual(card, diamondThree)) {
            return playerNumber = currentPlayerNumber;
          }
        });
      });
      return playerNumber;
    };

    Game.prototype.processTurn = function(id, cards) {
      var result;
      if (this.players[this.whoseTurn].id === id) {
        return result = this.rulesEngine.checkIfMoveIsValid(cards);
      }
    };

    return Game;

  })();

  exports.Game = Game;

}).call(this);
